{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/connection/connection-test-dialog.html","./src/app/connection/connection.component.html","./src/app/ace-connection.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/connection/connection.component.scss","./src/app/connection/connection.component.ts","./src/app/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"page\\\">\\n  <div class=\\\"header\\\">\\n    <h1>\\n      Welcome to {{ title }}!\\n    </h1>\\n  </div>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"<mat-dialog-content>\\r\\n  Connection was {{data.ok ? 'Successful': 'Unsuccessful'}}\\r\\n  <div *ngIf=\\\"!data.ok && data.err\\\">{{data.err}}</div>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n  <button *ngIf=\\\"data.ok\\\" mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Save details</button>\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"connection-form\\\">\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"connection-form-item\\\">\\n      <mat-label>User Name:</mat-label>\\n      <input type=\\\"text\\\" matInput [(ngModel)]=\\\"connectionDetails.user\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"connection-form-item\\\">\\n      <mat-label>Password:</mat-label>\\n      <input type=\\\"text\\\" matInput [(ngModel)]=\\\"connectionDetails.password\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"connection-form-item\\\">\\n      <mat-label>Port:</mat-label>\\n      <input type=\\\"number\\\" matInput [(ngModel)]=\\\"connectionDetails.port\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"connection-form-item\\\">\\n      <mat-label>Server Ip:</mat-label>\\n      <input type=\\\"text\\\" matInput [(ngModel)]=\\\"connectionDetails.server\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\" class=\\\"connection-form-item\\\">\\n      <mat-label>Database:</mat-label>\\n      <input type=\\\"text\\\" matInput [(ngModel)]=\\\"connectionDetails.database\\\">\\n    </mat-form-field>\\n    <button mat-button color=\\\"primary\\\" class=\\\"mat-raised-button\\\" (click)=\\\"testConnection()\\\">Test</button>\\n  </div>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"isShowSpinner\\\">\\n  <mat-spinner></mat-spinner>\\n</div>\\n\"","import {Injectable} from '@angular/core';\nimport {ConnectionDetails} from \"./connection-details.ace\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\nconst API_TEST_CONNECTION = 'api/connect'\n\nexport interface ITestConnection {\n  data?: any,\n  err?: any,\n  ok: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AceConnectionService {\n\n  private connectionDetails: ConnectionDetails\n\n  constructor(private http: HttpClient) { }\n\n  private setConnectionDetails( details: ConnectionDetails) {\n    this.connectionDetails = details;\n  }\n\n  public testConnection(details: ConnectionDetails) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    this.setConnectionDetails(details);\n    return this.http.post<ITestConnection>('http://localhost:3000/api/ace/testConnection', details, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ConnectionComponent} from \"./connection/connection.component\";\n\n\nconst routes: Routes = [\n  { path: 'connection', component: ConnectionComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'User Rights Manager';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ConnectionComponent, ConnectionTestDialog} from './connection/connection.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from \"@angular/forms\";\nimport {MaterialModule} from \"./material.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConnectionComponent,\n    ConnectionTestDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ConnectionTestDialog\n  ]\n})\nexport class AppModule { }\n","module.exports = \".connection-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-align: start;\\n          align-items: flex-start;\\n  align-content: stretch;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n.connection-form .connection-form-item {\\n  margin: 0 15px 0 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29ubmVjdGlvbi9jOlxcZGV2XFxyZXNlYXJjaFxcdXJtXFx1cm0tY2xpZW50L3NyY1xcYXBwXFxjb25uZWN0aW9uXFxjb25uZWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb25uZWN0aW9uL2Nvbm5lY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBQTtFQUFBLGFBQUE7RUFDQSw4QkFBQTtFQUFBLDZCQUFBO1VBQUEsbUJBQUE7RUFDQSx3QkFBQTtVQUFBLHVCQUFBO0VBQ0Esc0JBQUE7RUFDQSx5QkFBQTtVQUFBLDhCQUFBO0FDQ0Y7QURBRTtFQUNFLHFCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9jb25uZWN0aW9uL2Nvbm5lY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29ubmVjdGlvbi1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgYWxpZ24tY29udGVudDogc3RyZXRjaDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgLmNvbm5lY3Rpb24tZm9ybS1pdGVtIHtcclxuICAgIG1hcmdpbjogMCAxNXB4IDAgMTVweDtcclxuICB9XHJcbn1cclxuIiwiLmNvbm5lY3Rpb24tZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4uY29ubmVjdGlvbi1mb3JtIC5jb25uZWN0aW9uLWZvcm0taXRlbSB7XG4gIG1hcmdpbjogMCAxNXB4IDAgMTVweDtcbn0iXX0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {AceConnectionService} from \"../ace-connection.service\";\nimport {ConnectionDetails} from \"../connection-details.ace\";\nimport {MAT_DIALOG_DATA, MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.component.html',\n  styleUrls: ['./connection.component.scss']\n})\nexport class ConnectionComponent implements OnInit {\n\n  public connectionDetails: ConnectionDetails;\n  public isShowSpinner: boolean = false;\n\n  constructor(private connectionService: AceConnectionService,\n              public dialog: MatDialog) {\n    if (!this.connectionDetails) {\n      this.connectionDetails = {user: 'dbs', password: 'dbssql', server: '10.164.58.40', port: 5000, database: 'admin'};\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  public testConnection() {\n    this.isShowSpinner = true;\n      this.connectionService.testConnection(this.connectionDetails).subscribe(response => {\n        if (response.err) {\n          console.error(response.err);\n        }\n        else {\n          this.openDialog(response);\n        }\n        this.isShowSpinner = false;\n      });\n  }\n\n  public openDialog(data: any) {\n    const dialogRef = this.dialog.open(ConnectionTestDialog, {\n      data\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    })\n  }\n}\n\n@Component({\n  selector: 'connection-test-dialog',\n  templateUrl: 'connection-test-dialog.html'\n})\nexport class ConnectionTestDialog{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n}\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}